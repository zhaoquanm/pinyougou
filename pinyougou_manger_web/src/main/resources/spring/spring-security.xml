<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 以下页面不被拦截 -->
    <http pattern="/login.html" security="none"></http>
    <!--** 代表当前目标及其子目录中的文件都不拦截-->
    <http pattern="/css/**" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>

    <!-- 拦截规则 -->
    <http use-expressions="false">
        <!--安全框架的两个最主要的用处是：1、验证，2、授权

        注意：必须以ROLE_开头，而且ROLE必须大写，这个表示的是要登录的用户名——access当用户具有这些权限的时候 才能去访问pattern中的路劲 而这个路径 表示的是 当前项目下的所有的资源
        login-page：表示的是我们要验证的登录的页面是"/login.html"
        default-target-url="/admin/index.html"：表示当我们登录成功后跳转到的admin下的index.html这个页面
        authentication-failure-url="/login.html"：验证失败后跳转的页面是"/login.html"
        always-use-default-target="true"  我们使用这个内容的 有可能是 我们通过里面的某些页面，比如 我们通过这个brand.html这个页面 就可以进入到login.html然后登录成功 但是我们在下面设置的是 当我们登录成功后 就应该跳转到index.html 这个页面 而不是 我们用登录的这个brand.html这个页面 所有我们 就要将这个关掉 让他定义为true  这样 就会直接跳转到 index.html这个页面
        -->
        <intercept-url pattern="/**" access="ROLE_ADMIN" />
        <form-login
                login-page="/login.html"
                default-target-url="/admin/index.html"
                authentication-failure-url="/login.html"
                always-use-default-target="true"
        />

        <!--always-use-default-target="true" 配置作用：登录成功后后，一直跳转运营商管理后台首页-->
        <!--安全机制，跨域请求伪造拦截机制 当我们使用默认的  就是 这个为false的时候 ，他就会登录的时候 就会报错，报的是是403  找不到这个资源 -->
        <csrf disabled="true" />

        <!-- iframe策略 -->
        <headers>
            <!--//DENY：浏览器拒绝当前页面加载任何Frame页面
           //SAMEORIGIN：frame页面的地址只能为同源域名下的页面，而同源 表示的是域名相同  就是下面的这三部分都相同
        //ALLOW-FROM：origin为允许frame加载的页面地址。
        一个域名的组成由三个部分组成：
        域名：协议+ 服务器ip地址+ 端口号-->
            <frame-options policy="SAMEORIGIN" />
        </headers>

        <!--退出系统-->
        <logout/>
    </http>

    <!-- 认证管理器 -->
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <!--authorities用户具有的角色和权限数据-->
                <user name="admin" password="123456" authorities="ROLE_ADMIN" />
                <user name="sunwukong" password="dasheng" authorities="ROLE_ADMIN" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
</beans:beans>